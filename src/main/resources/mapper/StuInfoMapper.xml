<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guohe.app.mapper.StuInfoMapper">
  <resultMap id="BaseResultMap" type="com.guohe.app.model.StuInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="academy" jdbcType="VARCHAR" property="academy" />
    <result column="class_num" jdbcType="VARCHAR" property="class_num" />
    <result column="identity_card_number" jdbcType="VARCHAR" property="identity_card_number" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, password, name, birthday, major, academy, class_num, identity_card_number, 
    sex, create_time
  </sql>
  <select id="selectByExample" parameterType="com.guohe.app.model.StuInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guohe.app.model.StuInfoExample">
    delete from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guohe.app.model.StuInfo">
    insert into student_info (id, uid, password, 
      name, birthday, major, 
      academy, class_num, identity_card_number, 
      sex, create_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{academy,jdbcType=VARCHAR}, #{class_num,jdbcType=VARCHAR}, #{identity_card_number,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.guohe.app.model.StuInfo">
    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="academy != null">
        academy,
      </if>
      <if test="class_num != null">
        class_num,
      </if>
      <if test="identity_card_number != null">
        identity_card_number,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        #{academy,jdbcType=VARCHAR},
      </if>
      <if test="class_num != null">
        #{class_num,jdbcType=VARCHAR},
      </if>
      <if test="identity_card_number != null">
        #{identity_card_number,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guohe.app.model.StuInfoExample" resultType="java.lang.Long">
    select count(*) from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.academy != null">
        academy = #{record.academy,jdbcType=VARCHAR},
      </if>
      <if test="record.class_num != null">
        class_num = #{record.class_num,jdbcType=VARCHAR},
      </if>
      <if test="record.identity_card_number != null">
        identity_card_number = #{record.identity_card_number,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_info
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      academy = #{record.academy,jdbcType=VARCHAR},
      class_num = #{record.class_num,jdbcType=VARCHAR},
      identity_card_number = #{record.identity_card_number,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guohe.app.model.StuInfo">
    update student_info
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="academy != null">
        academy = #{academy,jdbcType=VARCHAR},
      </if>
      <if test="class_num != null">
        class_num = #{class_num,jdbcType=VARCHAR},
      </if>
      <if test="identity_card_number != null">
        identity_card_number = #{identity_card_number,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guohe.app.model.StuInfo">
    update student_info
    set uid = #{uid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      academy = #{academy,jdbcType=VARCHAR},
      class_num = #{class_num,jdbcType=VARCHAR},
      identity_card_number = #{identity_card_number,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.guohe.app.model.StuInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>